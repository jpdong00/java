<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jpdong的进阶之路</title>
  
  <subtitle>学，无止境</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-26T09:19:03.043Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>jpdong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>markdown的使用</title>
    <link href="http://yoursite.com/markdown%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>http://yoursite.com/markdown的使用.html</id>
    <published>2019-05-26T08:00:00.000Z</published>
    <updated>2019-05-26T09:19:03.043Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>Markdown 是一种轻量级标记语言，易读易写，适用于网络的书写语言，而且Markdown支持嵌入html标签。<br>注意：Markdown使用#、+、*等符号来标记，符号后面必须跟上至少1个空格才有效；如果要换行，则空两个以上空格再回车。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>用#标记，在标题开头加上1~6不同个数的#，分别代表一级、二级….六级标题。</p><pre><code># 一级标题  ## 二级标题  ### 三级标题  #### 四级标题  ##### 五级标题  ###### 六级标题  </code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序列表使用-、+和*作为列表标记：</p><pre><code>- Red+ Green* Blue</code></pre><p>有序列表使用数字加英文句点.来表示：</p><pre><code>1. Red2. Green3. Blue</code></pre><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>用&gt;来表示，不同数量的&gt;代表多级引用。</p><pre><code>&gt; 一级引用&gt; &gt; 二级引用&gt; &gt; &gt; 三级引用</code></pre><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>两个<em>或-代表加粗，一个</em>或-代表斜体，~~代表删除。</p><pre><code>**加粗文本** __加粗文本__*斜体文本*_斜体文本_~~删除文本~~</code></pre><h2 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h2><pre><code>图片：![]()  ![图片文本(可忽略)](图片地址)行内式链接：[链接文本](链接地址)参考式链接：[链接文本][url]，其中url为链接标记，可置于文中任意位置。[url]: http://jpdong00.github.io/ &quot;链接文本&quot;(可忽略)</code></pre><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>行内代码使用 <code>代码</code> 标识，可嵌入文字中。  </p><p>代码块使用4个空格或```标识，一般我会选中代码按tab键。 如下：</p><pre><code>public static void main(String[] args) {      int a = 10;      System.out.println(&quot;a = &quot; + a);  }</code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul><li><p>居左：<code>:----</code> </p></li><li><p>居中：<code>:----:</code>或<code>-----</code>  </p></li><li><p>居右：<code>----:</code> </p><table><thead><tr><th align="left">标题</th><th align="center">标题</th><th align="right">标题</th></tr></thead><tbody><tr><td align="left">居左测试文本</td><td align="center">居中测试文本</td><td align="right">居右测试文本</td></tr><tr><td align="left">居左测试文本1</td><td align="center">居中测试文本2</td><td align="right">居右测试文本3</td></tr></tbody></table></li></ul><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>在一行中用三个以上的*、-、_来建立一个分隔线，行内不能有其他东西。也可以在符号间插入空格。</p><pre><code>***---___* * *</code></pre><h2 id="脚注-注解"><a href="#脚注-注解" class="headerlink" title="脚注(注解)"></a>脚注(注解)</h2><p>使用[^]来定义脚注：</p><pre><code>这是一个脚注的例子[^1][^1]，代表脚注</code></pre><h2 id="常用的Html标签"><a href="#常用的Html标签" class="headerlink" title="常用的Html标签"></a>常用的Html标签</h2><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><pre><code>&lt;font face=&quot;微软雅黑&quot; color=&quot;red&quot; size=&quot;6&quot;&gt;字体及字体颜色和大小&lt;/font&gt;  &lt;font color=&quot;#0000ff&quot;&gt;字体颜色&lt;/font&gt;</code></pre><h3 id="文本对齐方式"><a href="#文本对齐方式" class="headerlink" title="文本对齐方式"></a>文本对齐方式</h3><pre><code>&lt;p align=&quot;left&quot;&gt;居左文本&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;居中文本&lt;/p&gt;&lt;p align=&quot;right&quot;&gt;居右文本&lt;/p&gt;</code></pre><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><pre><code>&lt;u&gt;下划线文本&lt;/u&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      markdown语言还是挺容易上手的，最常用的格式总结如下。
    
    </summary>
    
      <category term="小白之路" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%99%BD%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="others" scheme="http://yoursite.com/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>用github搭建个人博客</title>
    <link href="http://yoursite.com/%E7%94%A8github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://yoursite.com/用github搭建个人博客.html</id>
    <published>2019-05-26T07:18:00.000Z</published>
    <updated>2019-05-26T08:13:53.979Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="第一步：搭建Github-Pages"><a href="#第一步：搭建Github-Pages" class="headerlink" title="第一步：搭建Github Pages"></a>第一步：搭建Github Pages</h3><ol><li>注册GitHub。不多说了。</li><li>创建仓库。需要注意Repository name一定要设置为注册的github名.github.io，这样就可以通过它访问博客主页。我已经创建过了，所以有红色的提示。这说明每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，这是特殊的命名约定。</li></ol><p><img src="https://note.youdao.com/yws/api/personal/file/WEBc73a805c09a90b16b4f8919d85b8e860?method=download&shareKey=8553dd8e7a9d05494683a38a71d87b58" alt="新建仓库"></p><ol start="3"><li>开启Github Pages并选择主题。进入创建好的仓库，点击Settings,向下划找到Github Pages这一栏，如果仓库名字设置对了，就会显示Your site is published at…，可以点击Choose a theme进入选择主题的界面。</li></ol><h3 id="第二步：配置系统环境"><a href="#第二步：配置系统环境" class="headerlink" title="第二步：配置系统环境"></a>第二步：配置系统环境</h3><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">下载Node.js</a>  </p><p><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装参考</a>  </p><p>我在安装时就遇到了问题，下载了zip文件却不能安装，都怪自己无知，不知道啥是二进制文件，然后又下载了msi格式的才安装上。</p><p><img src="https://note.youdao.com/yws/api/personal/file/WEB27ceaee83e4879d1f7e8c8c5cc596dea?method=download&shareKey=20d1229f122d1e6f03697ed6f507752b" alt="node安装"></p><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p><a href="http://git-scm.com/download/" target="_blank" rel="noopener">下载地址</a></p><p>一路点击Next就行了.</p><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>首先在磁盘上选择一个位置新建一个文件夹以存放生成的Hexo文件，该文件存放博客的内容等，以D:/blog为例。进入blog文件夹内右键选择Git Bash Here，在命令行里分别输入以下命令。</p><blockquote><p>npm install hexo-cli -g<br>hexo init<br>npm install<br>hexo g<br>hexo s </p></blockquote><p>几个常用Hexo命令：<br>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹；<br>hexo server (hexo s) 启动本地web服务，用于博客的预览，可以通过<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看；<br>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）；<br>hexo new “postName” 新建文章；<br>hexo new page “pageName” 新建页面；  </p><p>常用组合<br>hexo d -g #生成部署<br>hexo s -g #生成预览</p><h3 id="第三步：添加主题"><a href="#第三步：添加主题" class="headerlink" title="第三步：添加主题"></a>第三步：添加主题</h3><h4 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h4><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">点击进入Hexo博客主题网站</a> </p><p><img src="https://note.youdao.com/yws/api/personal/file/WEBa306d727dea08fc90c3dfe13db68f537?method=download&shareKey=aa486e5569d119053bd7d58ee788ba70" alt="hexo主题">    </p><p>然后点击主题进入，这里有250多个主题可以选择。</p><p><img src="https://note.youdao.com/yws/api/personal/file/WEBfe9d79cf05bbfeb37d6210b5bc5cb172?method=download&shareKey=9958f453a2168c1c670bace4ce2409ab" alt="选择hexo主题"> </p><p>找到喜欢的可以点击图片预览，点图片下面的名称则可进入github，查看源代码以及使用说明。  </p><p><img src="https://note.youdao.com/yws/api/personal/file/WEBe568d245db9501250ff6f9339d8ff269?method=download&shareKey=cf7651c3133dfa25bb7c5033ea3eeadc" alt="主题详情"> </p><h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><p>以black-blue主题为例：<br>1.安装  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">hexo clean    </span><br><span class="line">cd themes &amp;&amp; git clone https://github.com/maochunguang/black-blue</span><br><span class="line">```  </span><br><span class="line">2.启动  </span><br><span class="line">返回到Hexo目录下，打开_config.yml文件，找到theme属性，修改为theme: black-blue  </span><br><span class="line">![修改theme](https://note.youdao.com/yws/api/personal/file/WEB686a5ad516ab998d692717c961c96bdb?method=download&amp;shareKey=d77c7839b649be38e5c2c67d77e485a0)</span><br><span class="line"></span><br><span class="line">3.更新</span><br><span class="line">```  </span><br><span class="line">cd themes/black-blue  </span><br><span class="line">git pull  </span><br><span class="line">hexo g  </span><br><span class="line">hexo s   </span><br><span class="line">```   </span><br><span class="line">此时刷新http://localhost:4000/页面就能看到新的主题了。</span><br><span class="line"></span><br><span class="line">### 第四步：配置SSH key</span><br><span class="line"></span><br><span class="line">#### 设置SSH keys  </span><br><span class="line">在git bash中依次输入以下命令，生成SSH key</span><br><span class="line"></span><br><span class="line">cd ~/.ssh</span><br><span class="line">ls</span><br><span class="line">mkdir key_backup</span><br><span class="line">cp id_rsa* key_backup</span><br><span class="line">rm id_rsa*  </span><br><span class="line">#以上三步为备份和移除原来的SSH key设置</span><br><span class="line">ssh-keygen -t rsa -C &quot;jpdong00@gmail.com&quot; #生成新的key文件,邮箱地址填你的Github地址</span><br><span class="line">#Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;</span><br><span class="line">#接下来会让你输入密码 </span><br><span class="line"></span><br><span class="line">#### 添加SSH Key到Github</span><br><span class="line">首先到Github首页,点击Settings进入设置，找到SSH and GPG keys，点击New SSH keys。  </span><br><span class="line">   </span><br><span class="line">![GitHub首页](https://images2017.cnblogs.com/blog/1250458/201710/1250458-20171017153636849-294935886.png)</span><br><span class="line">![新建SSH key](https://images2017.cnblogs.com/blog/1250458/201710/1250458-20171017153642521-647884655.png)</span><br><span class="line"></span><br><span class="line">接着(开启查看隐藏文件)找到C:\Users\用户名\.ssh id_rsa.pub文件，以文本方式打开，打开之后全部复制到key中</span><br><span class="line">![复制SSH key](https://images2017.cnblogs.com/blog/1250458/201710/1250458-20171017153648631-441574444.png) </span><br><span class="line"> </span><br><span class="line">做到这里就可以打开git bash输入以下命令测试是否配置成功:</span><br><span class="line">&gt;ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后设置账号信息:</span><br><span class="line"></span><br><span class="line">&gt;git config --global user.name &quot;jpdong00&quot;   </span><br><span class="line">&gt;git config --global user.email &quot;jpdong00@gmail.com&quot;  #github邮箱</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 第五步：部署到github</span><br><span class="line">1.再次打开Hexo目录下的_config.yml文件，修改deploy属性</span><br><span class="line">&gt;deploy:</span><br><span class="line">&gt;   type: git</span><br><span class="line">&gt;   repo: git@github.com:jpdong/jpdong.github.io.git</span><br><span class="line">&gt;   branch: master    </span><br><span class="line">  </span><br><span class="line">2.安装一个扩展</span><br><span class="line"></span><br><span class="line">&gt;npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">3.进行部署：  </span><br><span class="line">方式一：在命令行中输入以下命令即可完成部署。  </span><br><span class="line">&gt;hexo d</span><br><span class="line"></span><br><span class="line">方式二：不幸的是，虽然方式一简单方便，但是偶尔会有莫名其妙的问题出现，可以使用git命令来完成部署的工作。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">首先，将之前创建的仓库克隆到本地，新建一个目录叫做.deploy的文件夹来存放克隆的代码。</span><br><span class="line">&gt;cd d:/hexo/blog</span><br><span class="line">&gt;git clone https://github.com/jpdong00/jpdong00.github.io.git .deploy/jpdong00.github.io</span><br><span class="line"></span><br><span class="line">然后创建一个deploy脚本文件，执行部署工作。 脚本可以保存为deploy.sh，第一次执行时要输入Github账户的用户名及密码，按照提示操作即可。</span><br><span class="line">``` </span><br><span class="line">hexo generate   </span><br><span class="line">cp -R public/* .deploy/jpdong00.github.io    </span><br><span class="line">cd .deploy/jiji262.github.io    </span><br><span class="line">git add .      </span><br><span class="line">git commit -m “update”    </span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>代码的含义如下：hexo generate生成public文件夹下的新内容，然后将其拷贝至jpdong00.github.io的git目录下，再使用git commit命令提交代码到jpdong00.github.io这个仓库的master branch上。</p><p>这时再刷新jpdong00.github.io就可以看到搭建成功的博客了。</p><h3 id="第六步：完善博客内容"><a href="#第六步：完善博客内容" class="headerlink" title="第六步：完善博客内容"></a>第六步：完善博客内容</h3><p>到第五步为止，一个简单的博客就搭建完成了，接下来就是更细致的配置了，未完待续。</p><h3 id="第七步：问题汇总"><a href="#第七步：问题汇总" class="headerlink" title="第七步：问题汇总"></a>第七步：问题汇总</h3><h4 id="hexo-d-问题"><a href="#hexo-d-问题" class="headerlink" title="hexo d 问题"></a>hexo d 问题</h4><p>hexo d 后出现 ERROR Deployer not found: git<br>执行以下命令后，再次执行hexo d </p><blockquote><p>npm install –save hexo-deployer-git</p></blockquote><h4 id="乱码问题"><a href="#乱码问题" class="headerlink" title="乱码问题"></a>乱码问题</h4><p>一开始我是用Notepad++编辑的文档，生成的blog中文字符都是乱码，设置了_config.yml中的language: zh-Hans还是没有解决。最后找到了一个办法，我用的Notepad++默认是ANSI编码，而yml是用UTF-8编码的，后来用VSCode重新改了_config.yml文档，解决了这个问题。</p><h4 id="更新blog问题"><a href="#更新blog问题" class="headerlink" title="更新blog问题"></a>更新blog问题</h4><p>hexo g 命令把编写完的md文档生成为html格式，用git命令上传更新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git status # 查看状态</span><br><span class="line">git add . # 添加到暂存区</span><br><span class="line">git commit -m &quot;更新blog&quot;  # 提交</span><br><span class="line">git pull --rebase origin master # 与远程仓库同步</span><br><span class="line">git push -u origin master # 上传</span><br></pre></td></tr></table></figure><h4 id="其它问题"><a href="#其它问题" class="headerlink" title="其它问题"></a>其它问题</h4><p>还有好多好多的小问题，比如上传到github不成功，使用cnpm，markdown语言如何使用等等。对于我这个小白来说：路漫漫其修远兮，吾将上下而求索。</p>]]></content>
    
    <summary type="html">
    
      在网上看了几个用github搭建个人博客的教程，写的不错，但是我在仿照教程搭建的过程中仍然遇到了很多问题，故记录一下，供今后参考。
    
    </summary>
    
      <category term="小白之路" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%99%BD%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="others" scheme="http://yoursite.com/tags/others/"/>
    
  </entry>
  
</feed>
