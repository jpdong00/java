[{"title":"markdown的使用","url":"/markdown的使用.html","content":"<!-- more -->\nMarkdown 是一种轻量级标记语言，易读易写，适用于网络的书写语言，而且Markdown支持嵌入html标签。  \n注意：Markdown使用#、+、*等符号来标记，符号后面必须跟上至少1个空格才有效；如果要换行，则空两个以上空格再回车。\n\n## 标题\n用#标记，在标题开头加上1~6不同个数的#，分别代表一级、二级....六级标题。\n  \n\t# 一级标题  \n\t## 二级标题  \n\t### 三级标题  \n\t#### 四级标题  \n\t##### 五级标题  \n\t###### 六级标题  \n  \n## 列表\n\n无序列表使用-、+和*作为列表标记：\n\n\t- Red\n\t+ Green\n\t* Blue\n\t \n\n有序列表使用数字加英文句点.来表示：\n\n\t1. Red\n\t2. Green\n\t3. Blue\n\n## 引用\n\n用>来表示，不同数量的>代表多级引用。\n\n\t> 一级引用\n\t> > 二级引用\n\t> > > 三级引用\n \n## 强调\n两个*或-代表加粗，一个*或-代表斜体，~~代表删除。\n\n\t**加粗文本** \n\t__加粗文本__\n\t*斜体文本*\n\t_斜体文本_\n\t~~删除文本~~\n\n## 图片与链接\n\n\t图片：![]()  ![图片文本(可忽略)](图片地址)\n\n\t行内式链接：[链接文本](链接地址)\n\t\n\t参考式链接：[链接文本][url]，其中url为链接标记，可置于文中任意位置。\n\t\n\t[url]: http://jpdong00.github.io/ \"链接文本\"(可忽略)\n\n## 代码\n\n行内代码使用 `代码` 标识，可嵌入文字中。  \n \n代码块使用4个空格或```标识，一般我会选中代码按tab键。 如下：\n\n\tpublic static void main(String[] args) {  \n\t\tint a = 10;  \n\t\tSystem.out.println(\"a = \" + a);  \n\t}\n\n## 表格\n\n* 居左：`:---- ` \n* 居中：`:----:`或`-----`  \n* 居右：`----: ` \n \n\t|标题|标题|标题|  \n\t|:---|:---:|---:|  \n\t|居左测试文本|居中测试文本|居右测试文本|  \n\t|居左测试文本1|居中测试文本2|居右测试文本3|  \n\n## 分隔线\n\n在一行中用三个以上的*、-、_来建立一个分隔线，行内不能有其他东西。也可以在符号间插入空格。\n\n\t***\n\t---\n\t___\n\t\n\t* * *\n\n## 脚注(注解)\n\n使用[^]来定义脚注：\n\n\t这是一个脚注的例子[^1]\n\t[^1]，代表脚注\n\n## 常用的Html标签\n\n### 字体\n\n\t<font face=\"微软雅黑\" color=\"red\" size=\"6\">字体及字体颜色和大小</font>  \n\t<font color=\"#0000ff\">字体颜色</font>\n\n### 文本对齐方式\n\n\t<p align=\"left\">居左文本</p>\n\t<p align=\"center\">居中文本</p>\n\t<p align=\"right\">居右文本</p>\n\n### 下划线\n\t<u>下划线文本</u>","tags":["others"],"categories":["小白之路"]},{"title":"用github搭建个人博客","url":"/用github搭建个人博客.html","content":"<!-- more -->\n \n\n### 第一步：搭建Github Pages\n1. 注册GitHub。不多说了。\n2. 创建仓库。需要注意Repository name一定要设置为注册的github名.github.io，这样就可以通过它访问博客主页。我已经创建过了，所以有红色的提示。这说明每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，这是特殊的命名约定。\n\n![新建仓库](https://note.youdao.com/yws/api/personal/file/WEBc73a805c09a90b16b4f8919d85b8e860?method=download&shareKey=8553dd8e7a9d05494683a38a71d87b58)\n3. 开启Github Pages并选择主题。进入创建好的仓库，点击Settings,向下划找到Github Pages这一栏，如果仓库名字设置对了，就会显示Your site is published at...，可以点击Choose a theme进入选择主题的界面。\n\n### 第二步：配置系统环境\n\n#### 安装Node.js\n\n[下载Node.js](https://nodejs.org/en/download/)  \n\n[安装参考](https://www.runoob.com/nodejs/nodejs-install-setup.html)  \n\n我在安装时就遇到了问题，下载了zip文件却不能安装，都怪自己无知，不知道啥是二进制文件，然后又下载了msi格式的才安装上。\n\n![node安装](https://note.youdao.com/yws/api/personal/file/WEB27ceaee83e4879d1f7e8c8c5cc596dea?method=download&shareKey=20d1229f122d1e6f03697ed6f507752b)\n\n#### 安装Git\n\n[下载地址](http://git-scm.com/download/)\n\n一路点击Next就行了.\n\n#### 安装Hexo\n\n首先在磁盘上选择一个位置新建一个文件夹以存放生成的Hexo文件，该文件存放博客的内容等，以D:/blog为例。进入blog文件夹内右键选择Git Bash Here，在命令行里分别输入以下命令。\n>npm install hexo-cli -g   \n>hexo init    \n>npm install   \n>hexo g    \n>hexo s \n\n几个常用Hexo命令：   \nhexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹；   \nhexo server (hexo s) 启动本地web服务，用于博客的预览，可以通过http://localhost:4000/ 查看；   \nhexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）；  \nhexo new \"postName\" 新建文章；   \nhexo new page \"pageName\" 新建页面；  \n\n常用组合  \nhexo d -g #生成部署   \nhexo s -g #生成预览\n \n### 第三步：添加主题\n\n#### 选择主题 \n[点击进入Hexo博客主题网站](https://hexo.io/zh-cn/) \n \n![hexo主题](https://note.youdao.com/yws/api/personal/file/WEBa306d727dea08fc90c3dfe13db68f537?method=download&shareKey=aa486e5569d119053bd7d58ee788ba70)    \n\n然后点击主题进入，这里有250多个主题可以选择。\n\n![选择hexo主题](https://note.youdao.com/yws/api/personal/file/WEBfe9d79cf05bbfeb37d6210b5bc5cb172?method=download&shareKey=9958f453a2168c1c670bace4ce2409ab) \n \n找到喜欢的可以点击图片预览，点图片下面的名称则可进入github，查看源代码以及使用说明。  \n\n![主题详情](https://note.youdao.com/yws/api/personal/file/WEBe568d245db9501250ff6f9339d8ff269?method=download&shareKey=cf7651c3133dfa25bb7c5033ea3eeadc) \n  \n#### 配置主题\n以black-blue主题为例：  \n1.安装  \n```\n\thexo clean    \n\tcd themes && git clone https://github.com/maochunguang/black-blue\n```  \n2.启动  \n返回到Hexo目录下，打开_config.yml文件，找到theme属性，修改为theme: black-blue  \n![修改theme](https://note.youdao.com/yws/api/personal/file/WEB686a5ad516ab998d692717c961c96bdb?method=download&shareKey=d77c7839b649be38e5c2c67d77e485a0)\n\n3.更新\n```  \n\tcd themes/black-blue  \n\tgit pull  \n\thexo g  \n\thexo s   \n```   \n此时刷新http://localhost:4000/页面就能看到新的主题了。\n\n### 第四步：配置SSH key\n\n#### 设置SSH keys  \n在git bash中依次输入以下命令，生成SSH key\n\n\tcd ~/.ssh\n\tls\n\tmkdir key_backup\n\tcp id_rsa* key_backup\n\trm id_rsa*  \n\t#以上三步为备份和移除原来的SSH key设置\n\tssh-keygen -t rsa -C \"jpdong00@gmail.com\" #生成新的key文件,邮箱地址填你的Github地址\n\t#Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):<回车就好>\n\t#接下来会让你输入密码 \n\n#### 添加SSH Key到Github\n首先到Github首页,点击Settings进入设置，找到SSH and GPG keys，点击New SSH keys。  \n   \n![GitHub首页](https://images2017.cnblogs.com/blog/1250458/201710/1250458-20171017153636849-294935886.png)\n![新建SSH key](https://images2017.cnblogs.com/blog/1250458/201710/1250458-20171017153642521-647884655.png)\n\n接着(开启查看隐藏文件)找到C:\\Users\\用户名\\.ssh id_rsa.pub文件，以文本方式打开，打开之后全部复制到key中\n![复制SSH key](https://images2017.cnblogs.com/blog/1250458/201710/1250458-20171017153648631-441574444.png) \n \n做到这里就可以打开git bash输入以下命令测试是否配置成功:\n>ssh -T git@github.com\n\n\n然后设置账号信息:\n\n>git config --global user.name \"jpdong00\"   \n>git config --global user.email \"jpdong00@gmail.com\"  #github邮箱\n\n\n### 第五步：部署到github\n1.再次打开Hexo目录下的_config.yml文件，修改deploy属性\n>deploy:\n>   type: git\n>   repo: git@github.com:jpdong/jpdong.github.io.git\n>   branch: master    \n  \n2.安装一个扩展\n\n>npm install hexo-deployer-git --save\n\n3.进行部署：  \n方式一：在命令行中输入以下命令即可完成部署。  \n>hexo d\n\n方式二：不幸的是，虽然方式一简单方便，但是偶尔会有莫名其妙的问题出现，可以使用git命令来完成部署的工作。\n\n\n首先，将之前创建的仓库克隆到本地，新建一个目录叫做.deploy的文件夹来存放克隆的代码。\n>cd d:/hexo/blog\n>git clone https://github.com/jpdong00/jpdong00.github.io.git .deploy/jpdong00.github.io\n\n然后创建一个deploy脚本文件，执行部署工作。 脚本可以保存为deploy.sh，第一次执行时要输入Github账户的用户名及密码，按照提示操作即可。\n``` \n\thexo generate   \n\tcp -R public/* .deploy/jpdong00.github.io    \n\tcd .deploy/jiji262.github.io    \n\tgit add .      \n\tgit commit -m “update”    \n\tgit push origin master    \n```\n代码的含义如下：hexo generate生成public文件夹下的新内容，然后将其拷贝至jpdong00.github.io的git目录下，再使用git commit命令提交代码到jpdong00.github.io这个仓库的master branch上。\n\n这时再刷新jpdong00.github.io就可以看到搭建成功的博客了。\n\n### 第六步：完善博客内容\n到第五步为止，一个简单的博客就搭建完成了，接下来就是更细致的配置了，未完待续。\n\n### 第七步：问题汇总\n\n#### hexo d 问题\nhexo d 后出现 ERROR Deployer not found: git  \n执行以下命令后，再次执行hexo d \n>npm install --save hexo-deployer-git\n\n#### 乱码问题\n一开始我是用Notepad++编辑的文档，生成的blog中文字符都是乱码，设置了_config.yml中的language: zh-Hans还是没有解决。最后找到了一个办法，我用的Notepad++默认是ANSI编码，而yml是用UTF-8编码的，后来用VSCode重新改了_config.yml文档，解决了这个问题。\n\n#### 更新blog问题\nhexo g 命令把编写完的md文档生成为html格式，用git命令上传更新。\n```\n\tgit status # 查看状态\n\tgit add . # 添加到暂存区\n\tgit commit -m \"更新blog\"  # 提交\n\tgit pull --rebase origin master # 与远程仓库同步\n\tgit push -u origin master # 上传\n```\n\n#### 其它问题\n还有好多好多的小问题，比如上传到github不成功，使用cnpm，markdown语言如何使用等等。对于我这个小白来说：路漫漫其修远兮，吾将上下而求索。","tags":["others"],"categories":["小白之路"]}]